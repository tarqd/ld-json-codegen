name: Publish PR preview
on: 
    workflow_dispatch:
    pull_request:
        types: [opened, synchronize, reopened]
        paths:
            - 'browser/**'
            - 'templates/**'
            - 'util/**'
jobs:
  publish-preview:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      statuses: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN}}
          description: 'Publish preview'
          environment: development
          transient-environment: true
          environment-url: https://ldcontext.arq.sh/dev/prs/${{ github.event.pull_request.number }}/index.html
      - name: Build site 
        run: |
          npm install && ./node_modules/.bin/parcel build browser/index.html --public-url /dev/prs/${{ github.event.pull_request.number }}/
      - name: Set up S3cmd cli tool
        uses: s3-actions/s3cmd@v1.5.0
        with:
          provider: linode # default is linode
          region: 'us-east-1'
          access_key: ${{ secrets.S3_ACCESS_KEY }}
          secret_key: ${{ secrets.S3_SECRET_KEY }}
      - name: Interact with object storage
        run: |
          ls -liah ~/.s3cfg
          cat ~/.s3cfg
          s3cmd sync -c ~/.s3cfg --guess-mime-type --no-mime-magic --recursive --acl-public dist/ s3://ldcontext.arq.sh/dev/prs/${{ github.event.pull_request.number }}/
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'
